#!/usr/bin/env python3
import os
import sys
import logging

# –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏—è
logging.basicConfig(
    level=logging.INFO,
    format='%(asctime)s - %(name)s - %(levelname)s - %(message)s'
)
logger = logging.getLogger(__name__)

# –î–æ–±–∞–≤–ª—è–µ–º –ø–∞–ø–∫—É app –≤ –ø—É—Ç—å Python
sys.path.append(os.path.join(os.path.dirname(__file__), 'app'))

def main():
    print("üéÆ Poker Mentor Bot - –ó–∞–ø—É—Å–∫ –Ω–∞ Railway...")
    print("=" * 50)
    
    try:
        from app.bot import PokerMentorBot
        from app.config import config
        from app.webhook_server import create_app
        
        # –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä—É–µ–º –±–æ—Ç–∞
        bot = PokerMentorBot()
        print("‚úÖ –ë–æ—Ç –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω")
        
        # –ü–æ–ª—É—á–∞–µ–º –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—é webhook
        webhook_host = os.getenv('RAILWAY_STATIC_URL')
        if not webhook_host:
            # –ï—Å–ª–∏ Railway –Ω–µ –ø—Ä–µ–¥–æ—Å—Ç–∞–≤–∏–ª URL, –∏—Å–ø–æ–ª—å–∑—É–µ–º –¥–µ—Ñ–æ–ª—Ç–Ω—ã–π
            webhook_host = f"https://{os.getenv('RAILWAY_PUBLIC_DOMAIN')}" if os.getenv('RAILWAY_PUBLIC_DOMAIN') else None
        
        if webhook_host:
            print(f"üåê –û–±–Ω–∞—Ä—É–∂–µ–Ω Railway URL: {webhook_host}")
            
            # –ù–∞—Å—Ç—Ä–∞–∏–≤–∞–µ–º webhook
            webhook_url = f"{webhook_host}/webhook"
            secret_token = os.getenv('WEBHOOK_SECRET', 'default_railway_secret')
            
            import asyncio
            
            async def setup_webhook():
                try:
                    # –£–¥–∞–ª—è–µ–º —Å—Ç–∞—Ä—ã–π webhook –µ—Å–ª–∏ –µ—Å—Ç—å
                    await bot.application.bot.delete_webhook()
                    
                    # –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –Ω–æ–≤—ã–π webhook
                    result = await bot.application.bot.set_webhook(
                        url=webhook_url,
                        secret_token=secret_token,
                        max_connections=40,
                        allowed_updates=["message", "callback_query"]
                    )
                    
                    if result:
                        print(f"‚úÖ Webhook —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω: {webhook_url}")
                        
                        # –ü—Ä–æ–≤–µ—Ä—è–µ–º –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ webhook
                        webhook_info = await bot.application.bot.get_webhook_info()
                        print(f"üìä Webhook info: {webhook_info.url}")
                    else:
                        print("‚ùå –û—à–∏–±–∫–∞ —É—Å—Ç–∞–Ω–æ–≤–∫–∏ webhook")
                        
                except Exception as e:
                    print(f"‚ùå –û—à–∏–±–∫–∞ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ webhook: {e}")
                    # –ü—Ä–æ–¥–æ–ª–∂–∞–µ–º —Ä–∞–±–æ—Ç—É –¥–∞–∂–µ –µ—Å–ª–∏ webhook –Ω–µ —É—Å—Ç–∞–Ω–æ–≤–∏–ª—Å—è
            
            # –ó–∞–ø—É—Å–∫–∞–µ–º –Ω–∞—Å—Ç—Ä–æ–π–∫—É webhook
            asyncio.run(setup_webhook())
            
            # –°–æ–∑–¥–∞–µ–º –∏ –∑–∞–ø—É—Å–∫–∞–µ–º Flask –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ
            flask_app = create_app(bot.application)
            
            port = int(os.getenv('PORT', 8000))
            host = '0.0.0.0'
            
            print(f"üöÄ –ó–∞–ø—É—Å–∫ –≤–µ–±-—Å–µ—Ä–≤–µ—Ä–∞ –Ω–∞ {host}:{port}")
            print("üìß –ë–æ—Ç –≥–æ—Ç–æ–≤ –ø—Ä–∏–Ω–∏–º–∞—Ç—å —Å–æ–æ–±—â–µ–Ω–∏—è!")
            
            # –ó–∞–ø—É—Å–∫–∞–µ–º Flask (Railway —Å–∞–º —É–ø—Ä–∞–≤–ª—è–µ—Ç –ø—Ä–æ—Ü–µ—Å—Å–æ–º)
            flask_app.run(host=host, port=port, debug=False)
            
        else:
            print("‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å –æ–ø—Ä–µ–¥–µ–ª–∏—Ç—å URL –¥–ª—è webhook")
            print("üîÑ –ó–∞–ø—É—Å–∫ –≤ polling —Ä–µ–∂–∏–º–µ...")
            bot.run()
            
    except Exception as e:
        logger.error(f"üí• –ö—Ä–∏—Ç–∏—á–µ—Å–∫–∞—è –æ—à–∏–±–∫–∞: {e}")
        import traceback
        traceback.print_exc()
        sys.exit(1)

if __name__ == "__main__":
    main()