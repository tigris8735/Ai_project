#!/usr/bin/env python3
import os
import sys
import logging

# –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏—è
logging.basicConfig(
    level=logging.INFO,
    format='%(asctime)s - %(name)s - %(levelname)s - %(message)s'
)

# –î–æ–±–∞–≤–ª—è–µ–º —Ç–µ–∫—É—â—É—é –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏—é –≤ –ø—É—Ç—å Python
sys.path.append(os.path.dirname(__file__))

print("üîß –ò–º–ø–æ—Ä—Ç–∏—Ä—É–µ–º –º–æ–¥—É–ª–∏...")

try:
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º –æ—Å–Ω–æ–≤–Ω—ã–µ –∏–º–ø–æ—Ä—Ç—ã
    from app.bot import PokerMentorBot
    from app.config import config
    print("‚úÖ –û—Å–Ω–æ–≤–Ω—ã–µ –º–æ–¥—É–ª–∏ –∑–∞–≥—Ä—É–∂–µ–Ω—ã")
    
    # –ü—Ä–æ–ø—É—Å–∫–∞–µ–º –ø—Ä–æ–±–ª–µ–º–Ω—ã–µ ML –º–æ–¥—É–ª–∏ –Ω–∞ –ø–µ—Ä–≤–æ–µ –≤—Ä–µ–º—è
    print("‚ö†Ô∏è –ü—Ä–æ–ø—É—Å–∫–∞–µ–º ML –º–æ–¥—É–ª–∏ –¥–ª—è –ø–µ—Ä–≤–æ–≥–æ –∑–∞–ø—É—Å–∫–∞")
    
except ImportError as e:
    print(f"‚ö†Ô∏è –ü—Ä–µ–¥—É–ø—Ä–µ–∂–¥–µ–Ω–∏–µ: {e}")
    # –ü—Ä–æ–¥–æ–ª–∂–∞–µ–º –±–µ–∑ –Ω–µ–∫–æ—Ç–æ—Ä—ã—Ö –º–æ–¥—É–ª–µ–π

def main():
    print("üéÆ Poker Mentor Bot - –ó–∞–ø—É—Å–∫ –Ω–∞ Railway...")
    
    try:
        from app.bot import PokerMentorBot
        from app.webhook_server import create_app
        
        # –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä—É–µ–º –±–æ—Ç–∞
        bot = PokerMentorBot()
        print("‚úÖ –ë–æ—Ç –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω")
        
        # –ü–æ–ª—É—á–∞–µ–º URL Railway
        railway_url = os.getenv('RAILWAY_STATIC_URL') 
        if not railway_url and os.getenv('RAILWAY_PUBLIC_DOMAIN'):
            railway_url = f"https://{os.getenv('RAILWAY_PUBLIC_DOMAIN')}"
        
        if railway_url:
            print(f"üåê Railway URL: {railway_url}")
            
            # –ù–∞—Å—Ç—Ä–∞–∏–≤–∞–µ–º webhook
            webhook_url = f"{railway_url}/webhook"
            secret_token = os.getenv('WEBHOOK_SECRET', 'railway_secret_123')
            
            import asyncio
            
            async def setup_webhook():
                try:
                    await bot.application.bot.delete_webhook()
                    result = await bot.application.bot.set_webhook(
                        url=webhook_url,
                        secret_token=secret_token,
                        max_connections=40
                    )
                    if result:
                        print(f"‚úÖ Webhook —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω: {webhook_url}")
                        
                        # –ü—Ä–æ–≤–µ—Ä—è–µ–º webhook info
                        webhook_info = await bot.application.bot.get_webhook_info()
                        print(f"üìä Webhook info: {webhook_info.url}")
                    else:
                        print("‚ùå –û—à–∏–±–∫–∞ —É—Å—Ç–∞–Ω–æ–≤–∫–∏ webhook")
                except Exception as e:
                    print(f"‚ö†Ô∏è –û—à–∏–±–∫–∞ webhook: {e}")
                    # –ü—Ä–æ–¥–æ–ª–∂–∞–µ–º —Ä–∞–±–æ—Ç—É –¥–∞–∂–µ –µ—Å–ª–∏ webhook –Ω–µ —É—Å—Ç–∞–Ω–æ–≤–∏–ª—Å—è
            
            asyncio.run(setup_webhook())
            
            # –ó–∞–ø—É—Å–∫–∞–µ–º Flask
            flask_app = create_app(bot.application)
            port = int(os.getenv('PORT', 8000))
            
            print(f"üöÄ –°–µ—Ä–≤–µ—Ä –∑–∞–ø—É—â–µ–Ω –Ω–∞ –ø–æ—Ä—Ç—É {port}")
            print("üì± –ë–æ—Ç –≥–æ—Ç–æ–≤ –∫ —Ä–∞–±–æ—Ç–µ!")
            flask_app.run(host='0.0.0.0', port=port, debug=False)
            
        else:
            print("‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å –æ–ø—Ä–µ–¥–µ–ª–∏—Ç—å URL Railway")
            print("üîÑ –ó–∞–ø—É—Å–∫ –≤ polling —Ä–µ–∂–∏–º–µ...")
            bot.run()
            
    except Exception as e:
        print(f"üí• –ö—Ä–∏—Ç–∏—á–µ—Å–∫–∞—è –æ—à–∏–±–∫–∞: {e}")
        import traceback
        traceback.print_exc()

if __name__ == "__main__":
    main()